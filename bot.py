import telebot
from telebot import types
import time
import sqlite3
import keyboard, config

bot = telebot.TeleBot(config.token)

@bot.message_handler(commands=['start'])
def start_bot(message):
    username = str(message.from_user.username)
    userid = str(message.chat.id)
    connect = sqlite3.connect('bot.db')
    q = connect.cursor()
    q.execute('''CREATE TABLE IF NOT EXISTS users(
        id TEXT, username TEXT
    )''')
    q.execute('''CREATE TABLE IF NOT EXISTS admins(
        id TEXT
    )''')
    connect.commit()
    res = q.execute(f"SELECT * FROM users where id = {userid}").fetchone()
    if res is None:
        q.execute("INSERT INTO users(id, username) VALUES ('%s', '%s')"%(userid, username))
        connect.commit()
        bot.send_photo(userid, "https://i.imgur.com/hB06KX3.jpg", caption="<b>–¢–ï–ö–°–¢ –ü–†–ò–í–ï–¢–°–í–ò–Ø –ù–û–í–û–ì–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø</b>",parse_mode="html", reply_markup=keyboard.menu)
    else:
        bot.send_photo(userid, "https://i.imgur.com/hB06KX3.jpg", caption="<b>–¢–ï–ö–°–¢ –ü–†–ò–í–ï–¢–°–í–ò–Ø –†–ê–ù–ï–ï –ó–ê–†–ï–ì–ò–°–¢–†–ò–†–û–í–ê–ù–û–ì–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø</b>", parse_mode="html", reply_markup=keyboard.menu)

@bot.message_handler(commands=['admin'])
def adm(message):
    adm = []
    connect = sqlite3.connect('bot.db')
    q = connect.cursor()
    res = q.execute("SELECT id FROM admins").fetchall()
    for i in res:
        adm.append(i[0])
    if message.chat.id in config.admins or str(message.chat.id) in adm:
        bot.send_sticker(message.chat.id, "CAACAgIAAxkBAAECfL1g2F23u2MLMzpNIeVbfc9wb-7hoAACzAADe04qEF9nkGXzCRxAIAQ", reply_markup=keyboard.adm)
    else:
        bot.send_message(message.chat.id, "–î–ª—è –≤–∞—Å —ç—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞üôÖ")

@bot.message_handler(content_types=['text'])
def txt_answ(message):
    userid = message.chat.id
    if message.text ==  "‚òòÔ∏è–î–æ–≤–µ—Ä–µ–Ω—ã–µ –º–∞–≥–∞–∑–∏–Ω—ã‚òòÔ∏è":
        bot.delete_message(chat_id=userid, message_id=message.message_id)
        bot.send_photo(userid, "https://i.imgur.com/4goCZtM.jpg", caption="–æ–ø–∏—Å–∞–Ω–∏–µ", reply_markup=keyboard.trust_shop)
    
    if message.text == "üçä–≠–ª.–£—Å–ª—É–≥–∏üçä":
        bot.delete_message(chat_id=userid, message_id=message.message_id)
        key = types.InlineKeyboardMarkup()
        key1 = types.InlineKeyboardButton("–û—Ç–∑—ã–≤—ã", url="https://t.me/joinchat/FpM6lg6gvy4wYTcy")
        key2 = types.InlineKeyboardButton("–ü—Ä–∞–π—Å",url="https://t.me/citrusxxxx")
        key3 = types.InlineKeyboardButton("–û–ø–µ—Ä–∞—Ç–æ—Ä", url="https://t.me/CitrusShopM")
        key.row(key1, key2, key3)
        key.row(types.InlineKeyboardButton("‚ùå–ó–∞–∫—Ä—ã—Ç—å", callback_data="delete"))
        bot.send_photo(userid, "https://i.imgur.com/BhZdFHG.jpg", caption="–æ–ø–∏—Å–∞–Ω–∏–µ", reply_markup=key)
    
    if message.text == "üßë‚Äçüíª–ê–¥–º–∏–Ωüßë‚Äçüíª":
        key = types.InlineKeyboardMarkup()
        key.row(types.InlineKeyboardButton("‚ùå–ó–∞–∫—Ä—ã—Ç—å", callback_data="delete"))
        bot.delete_message(chat_id=userid, message_id=message.message_id)
        bot.send_message(userid, f"<a href='https://t.me/jambo_squirt'> C–≤—è–∑–∞—Ç—å—Å—è —Å –∞–¥–º–∏–Ω–æ–º</a>",disable_web_page_preview=True, parse_mode="html", reply_markup=key)
    
    if message.text == "–ß–∞—Ç—ãü§º":
        key = types.InlineKeyboardMarkup()
        key.row(types.InlineKeyboardButton("‚ùå–ó–∞–∫—Ä—ã—Ç—å", callback_data="delete"))
        bot.delete_message(chat_id=userid, message_id=message.message_id)
        bot.send_message(userid, f"–û–ü–ò–°–ê–ù–ò–ï....<a href='https://t.me/jambo_squirt'>–°—Å—ã–ª–∫–∞ –Ω–∞ –ø–æ—Å—Ç</a>",disable_web_page_preview=True, parse_mode="html", reply_markup=key)

    if message.text == "–ú–µ–Ω—éüéÜ":
        bot.delete_message(chat_id=userid, message_id=message.message_id)
        bot.send_message(userid, "üéÜ", reply_markup=keyboard.menu)
    
    if message.text == "–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—Éüîà":
        bot.delete_message(chat_id=userid, message_id=message.message_id)
        bot.send_message(userid, "–¢–∏–ø —Ä–∞—Å—Å—ã–ª–∫–∏?", reply_markup=keyboard.spam)
    
    if message.text == "–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞üßë‚Äçüîß":
        bot.delete_message(chat_id=userid, message_id=message.message_id)
        send = bot.send_message(userid, "–í–≤–µ–¥–∏—Ç–µ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        bot.clear_step_handler_by_chat_id(userid)
        bot.register_next_step_handler(send, new_adm)
    
    if message.text == "üí´PORTAL DNRüí´":
        bot.delete_message(chat_id=userid, message_id=message.message_id)
        key = types.InlineKeyboardMarkup()
        key1 = types.InlineKeyboardButton("–ö–ù–û–ü–ö–ê 1", url="https://t.me/jambo_squirt")
        key2 = types.InlineKeyboardButton("–ö–ù–û–ü–ö–ê 2",url="https://t.me/jambo_squirt")
        key3 = types.InlineKeyboardButton("–ö–ù–û–ü–ö–ê 3", url="https://t.me/jambo_squirt")
        key.row(key1, key2, key3)
        key.row(types.InlineKeyboardButton("‚ùå–ó–∞–∫—Ä—ã—Ç—å", callback_data="delete"))
        bot.send_photo(userid, "https://i.imgur.com/BhZdFHG.jpg", caption="–æ–ø–∏—Å–∞–Ω–∏–µ", reply_markup=key)



        
        





@bot.callback_query_handler(func=lambda call: True)
def confirm_answer(call):
    userid = call.message.chat.id
    if call.data == "1":
        key = types.InlineKeyboardMarkup()
        key.row(types.InlineKeyboardButton("txt", url='https://t.me/CitrusShopM'))
        key.row(types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥", callback_data="back"))
        bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
        bot.send_photo(userid, "https://i.imgur.com/BhZdFHG.jpg", caption="–æ–ø–∏—Å–∞–Ω–∏–µ", reply_markup=key)
    
    if call.data == "3":
        key = types.InlineKeyboardMarkup()
        key.row(types.InlineKeyboardButton("txt", url='https://t.me/CitrusShopM'))
        key.row(types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥", callback_data="back"))
        bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
        bot.send_photo(userid, "https://i.imgur.com/BhZdFHG.jpg", caption="–æ–ø–∏—Å–∞–Ω–∏–µ", reply_markup=key)
    
    if call.data == "5":
        key = types.InlineKeyboardMarkup()
        key.row(types.InlineKeyboardButton("txt", url='https://t.me/CitrusShopM'))
        key.row(types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥", callback_data="back"))
        bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
        bot.send_photo(userid, "https://i.imgur.com/BhZdFHG.jpg", caption="–æ–ø–∏—Å–∞–Ω–∏–µ", reply_markup=key)
    
    if call.data == "7":
        key = types.InlineKeyboardMarkup()
        key.row(types.InlineKeyboardButton("txt", url='https://t.me/CitrusShopM'))
        key.row(types.InlineKeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥", callback_data="back"))
        bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
        bot.send_photo(userid, "https://i.imgur.com/BhZdFHG.jpg", caption="–æ–ø–∏—Å–∞–Ω–∏–µ", reply_markup=key)
    
    if call.data == "back":
        bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
        bot.send_photo(userid, "https://i.imgur.com/4goCZtM.jpg", caption="–æ–ø–∏—Å–∞–Ω–∏–µ", reply_markup=keyboard.trust_shop)
    
    if call.data == "delete":
        bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
    
    if call.data == "stop_spam":
        bot.delete_message(chat_id=call.message.chat.id, message_id=call.message.message_id)
    
    if call.data == "text":
        send = bot.edit_message_text(chat_id=userid, message_id=call.message.message_id, text="üì©–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏üì©")
        bot.clear_step_handler_by_chat_id(userid)
        bot.register_next_step_handler(send, conf_text)
    
    if call.data == "pics":
        send = bot.edit_message_text(chat_id=userid, message_id=call.message.message_id, text="üåå–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–æ—Ç–æ —Å –±–æ—Ç–∞ @imgurbot_botüåå")
        bot.clear_step_handler_by_chat_id(userid)
        bot.register_next_step_handler(send, caption)
    
    
    if call.data == "text_but":
        send = bot.edit_message_text(chat_id=userid, message_id=call.message.message_id, text="üì©–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏üì©")
        bot.clear_step_handler_by_chat_id(userid)
        bot.register_next_step_handler(send, text_but)
    
    if call.data == "pics_but":
        send = bot.edit_message_text(chat_id=userid, message_id=call.message.message_id, text="üåå–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–æ—Ç–æ —Å –±–æ—Ç–∞ @imgurbot_botüåå")
        bot.clear_step_handler_by_chat_id(call.message.chat.id)
        bot.register_next_step_handler(send, caption1)

def caption1(message):
    link = message.text
    send = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –ø–æ–¥ —Ñ–æ—Ç–æ")
    bot.clear_step_handler_by_chat_id(message.chat.id)
    bot.register_next_step_handler(send, but_pic, link)

def but_pic(message, link):
    capt = message.text
    send = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å—Å—ã–ª–∫—É –¥–ª—è –∫–Ω–æ–ø–∫–∏\n"\
        "<b>–¢–ï–ö–°–¢ –ò –°–°–´–õ–ö–ê –ß–ï–†–ï–ó –ü–†–û–ë–ï–õ!</b>", parse_mode='html')
    bot.clear_step_handler_by_chat_id(message.chat.id)
    bot.register_next_step_handler(send, conf_but_pic, capt, link)

def conf_but_pic(message,capt, link):
    btn = message.text
    arr = message.text.split(" ")
    key = types.InlineKeyboardMarkup()
    key1 = types.InlineKeyboardButton(f"{arr[0]}", url=f"{arr[1]}")
    key2 = types.InlineKeyboardButton("–ó–∞–∫—Ä—ã—Ç—å", callback_data="delete")
    key.row(key1)
    key.row(key2)
    send = bot.send_photo(message.chat.id, link, caption=f"{capt}\n\n"\
        "–û—Ç–ø—Ä–∞–≤–ª—è—Ç—å? –î–ê/–ù–ï–¢", parse_mode="html", reply_markup=key)
    bot.clear_step_handler_by_chat_id(message.chat.id)
    bot.register_next_step_handler(send, send_but_pic, capt, link, btn)

def send_but_pic(message,capt,link,btn):
    if message.text.lower() == "–¥–∞":
        arr = btn.split(" ")
        key = types.InlineKeyboardMarkup()
        key1 = types.InlineKeyboardButton(f"{arr[0]}", url=f"{arr[1]}")
        key2 = types.InlineKeyboardButton("–ó–∞–∫—Ä—ã—Ç—å", callback_data="delete")
        key.row(key1)
        key.row(key2)
        try:
            connect = sqlite3.connect('bot.db')
            q = connect.cursor()
            res = q.execute("SELECT id FROM users").fetchall()
            k = 0
            bot.send_message(message.chat.id, "<b>–†–∞—Å—Å—ã–ª–∫–∞ –Ω–∞—á–Ω–µ—Ç—å—Å—è —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã...</b>", parse_mode="html")
            time.sleep(3)
            bot.send_message(message.chat.id, "<b>–†–∞—Å—Å—ã–ª–∫–∞ –ø–æ—à–ª–∞...</b>", parse_mode="html")
            for i in res:
                try:
                    bot.send_photo(i[0], link, caption=capt, parse_mode="html", reply_markup=key)
                    time.sleep(0.3)
                except Exception as e:
                    print(e)
                k += 1
            bot.send_message(message.chat.id, f"–†–∞—Å—Å—ã–ª–∫—É –ø–æ–ª—É—á–∏–ª–æ {k} —á–µ–ª.")

        except Exception as e:
            print(e)

    else:
        bot.delete_message(chat_id=message.chat.id, message_id=message.message_id - 1)
        bot.send_message(message.chat.id, "–†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞!")



def text_but(message):
    text = message.text
    send = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç —Å—Å—ã–ª–∫—É –¥–ª—è –∫–Ω–æ–ø–∫–∏\n"\
        "<b>–¢–ï–ö–°–¢ –ò –°–°–´–õ–ö–ê –ß–ï–†–ï–ó –ü–†–û–ë–ï–õ!</b>", parse_mode='html')
    bot.clear_step_handler_by_chat_id(message.chat.id)
    bot.register_next_step_handler(send, conf_all_but, text)

def conf_all_but(message, text):
    but = message.text
    arr = message.text.split(" ")
    key = types.InlineKeyboardMarkup()
    key1 = types.InlineKeyboardButton(f"{arr[0]}", url=f"{arr[1]}")
    key2 = types.InlineKeyboardButton("–ó–∞–∫—Ä—ã—Ç—å", callback_data="delete")
    key.row(key1)
    key.row(key2)
    
    send = bot.send_message(message.chat.id, f"{text}\n\n"\
        "–û—Ç–ø—Ä–∞–≤–ª—è—Ç—å? –î–ê/–ù–ï–¢", reply_markup=key)
    bot.clear_step_handler_by_chat_id(message.chat.id)
    bot.register_next_step_handler(send, send_all_but, but, text)




def send_all_but(message, but, text):
    if message.text.lower() == "–¥–∞":
        arr = but.split(" ")
        key = types.InlineKeyboardMarkup()
        key1 = types.InlineKeyboardButton(f"{arr[0]}", url=f"{arr[1]}")
        key2 = types.InlineKeyboardButton("–ó–∞–∫—Ä—ã—Ç—å", callback_data="delete")
        key.row(key1)
        key.row(key2)
        try:
            connect = sqlite3.connect('bot.db')
            q = connect.cursor()
            res = q.execute("SELECT id FROM users").fetchall()
            bot.send_message(message.chat.id, "<b>–†–∞—Å—Å—ã–ª–∫–∞ –Ω–∞—á–Ω–µ—Ç—å—Å—è —á–µ—Ä–µ–∑ 3 —Å—É–∫—É–Ω–¥—ã!</b>", parse_mode="html")
            time.sleep(3)
            bot.send_message(message.chat.id, "<b>–†–∞—Å—Å—ã–ª–∫–∞ –ø–æ—à–ª–∞!</b>", parse_mode="html")
            k = 0
            for i in res:
                try:
                    bot.send_message(i[0], text,disable_web_page_preview=True, parse_mode="html", reply_markup=key)
                    time.sleep(0.3)
                except Exception as e:
                    print(e)
                k += 1
            bot.send_message(message.chat.id, f"–†–∞—Å—Å—ã–ª–∫—É –ø–æ–ª—É—á–∏–ª–æ {k} —á–µ–ª.")
            
        except:
            bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞")
    else:
        bot.delete_message(chat_id=message.chat.id, message_id=message.message_id - 1)
        bot.send_message(message.chat.id, "–†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞!")


def caption(message):
    photo = message.text
    text = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –ø–æ–¥ —Ñ–æ—Ç–æ")
    bot.clear_step_handler_by_chat_id(message.chat.id)
    bot.register_next_step_handler(text, conf_photo, photo)

def conf_photo(message, photo):
    text = message.text
    send = bot.send_photo(message.chat.id, photo, caption=f"{text}\n\n"\
        "–û—Ç–ø—Ä–∞–≤–ª—è—Ç—å? –î–ê/–ù–ï–¢")
    bot.clear_step_handler_by_chat_id(message.chat.id)
    bot.register_next_step_handler(send, send_photo,text, photo)




def send_photo(message,text, photo):
    if message.text.lower() == "–¥–∞":
        try:
            caption = message.text
            connect = sqlite3.connect('bot.db')
            q = connect.cursor()
            res = q.execute("SELECT id FROM users").fetchall()
            bot.send_message(message.chat.id, "<b>–†–∞—Å—Å—ã–ª–∫–∞ –Ω–∞—á–Ω–µ—Ç—å—Å—è —á–µ—Ä–µ–∑ 3 —Å—É–∫—É–Ω–¥—ã!</b>", parse_mode="html")
            time.sleep(3)
            bot.send_message(message.chat.id, "<b>–†–∞—Å—Å—ã–ª–∫–∞ –ø–æ—à–ª–∞!</b>", parse_mode="html")
            k = 0
            for i in res:
                try:
                    bot.send_photo(i[0], photo,caption=caption, parse_mode="html", reply_markup=keyboard.user_spam)
                    time.sleep(0.3)
                except:
                    pass
                k += 1
            bot.send_message(message.chat.id, f"–†–∞—Å—Å—ã–ª–∫—É –ø–æ–ª—É—á–∏–ª–æ {k} —á–µ–ª.")
            
        except:
            bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞")
    else:
        bot.delete_message(chat_id=message.chat.id, message_id=message.message_id - 1)
        bot.send_message(message.chat.id, "–†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞!")



def conf_text(message):
    text = message.text
    send = bot.send_message(message.chat.id, f"{text}\n\n"\
        "–û—Ç–ø—Ä–∞–≤–ª—è—Ç—å? –î–ê/–ù–ï–¢")
    bot.clear_step_handler_by_chat_id(message.chat.id)
    bot.register_next_step_handler(send, send_all, text)



def send_all(message, text):
    if message.text.lower() == "–¥–∞":
        try:
            connect = sqlite3.connect('bot.db')
            q = connect.cursor()
            res = q.execute("SELECT id FROM users").fetchall()
            bot.send_message(message.chat.id, "<b>–†–∞—Å—Å—ã–ª–∫–∞ –Ω–∞—á–Ω–µ—Ç—å—Å—è —á–µ—Ä–µ–∑ 3 —Å—É–∫—É–Ω–¥—ã!</b>", parse_mode="html")
            time.sleep(3)
            bot.send_message(message.chat.id, "<b>–†–∞—Å—Å—ã–ª–∫–∞ –ø–æ—à–ª–∞!</b>", parse_mode="html")
            k = 0
            for i in res:
                try:
                    bot.send_message(i[0], text,disable_web_page_preview=True, parse_mode="html", reply_markup=keyboard.user_spam)
                    time.sleep(0.3)
                except:
                    pass
                k += 1
            bot.send_message(message.chat.id, f"–†–∞—Å—Å—ã–ª–∫—É –ø–æ–ª—É—á–∏–ª–æ {k} —á–µ–ª.")
            
        except:
            bot.send_message(message.chat.id, "–û—à–∏–±–∫–∞")
    else:
        bot.delete_message(chat_id=message.chat.id, message_id=message.message_id - 1)
        bot.send_message(message.chat.id, "–†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞!")
        
def new_adm(message):
    if message.text.isdigit():
        chat_id = message.text
        connect = sqlite3.connect("bot.db")
        q = connect.cursor()
        res = q.execute(f"SELECT * FROM admins where id = {chat_id}").fetchone()
        if res is None:
            q.execute("INSERT INTO admins(id) VALUES ('%s')"%(chat_id))
            connect.commit()
            bot.send_message(message.chat.id, "–ê–¥–º–∏–Ω —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ωüòå")
            bot.send_message(chat_id, "<b>‚ö°Ô∏è–í–∞–º –±—ã–ª–∏ –≤—ã–¥–∞–Ω—ã –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞: –ø—Ä–æ–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /admin ‚ö°Ô∏è</b>", parse_mode="html")
        else:
            bot.send_message(message.chat.id, "–ê–¥–º–∏–Ω —É–∂–µ –µ—Å—Ç—å –≤ –±–∞–∑–µ üßë‚Äçüíª")


    else:
        bot.send_message(message.chat.id, "–ù–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ ID!")



while True:
    try:
        bot.polling(none_stop=True, interval=0)
    except Exception as e:
        for i in config.admins:
            bot.send_message(i, f"–û—à–∏–±–∫–∞ {e}\n\n"\
                "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ @jambo_squirt")